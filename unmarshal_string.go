// Code generated by "go-stringer -type=UnmarshalPresence --trimprefix=UnmarshalPresence -output unmarshal_string.go -nametransform=lower -fromstringgenfn"; DO NOT EDIT.

package qs

import (
	"errors"
	"strconv"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UnmarshalPresenceUPUnspecified-0]
	_ = x[UnmarshalPresenceOpt-1]
	_ = x[UnmarshalPresenceNil-2]
	_ = x[UnmarshalPresenceReq-3]
}

const _UnmarshalPresence_name = "upunspecifiedoptnilreq"

var _UnmarshalPresence_index = [...]uint8{0, 13, 16, 19, 22}

func (i UnmarshalPresence) String() string {
	if i < 0 || i >= UnmarshalPresence(len(_UnmarshalPresence_index)-1) {
		return "UnmarshalPresence(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _UnmarshalPresence_name[_UnmarshalPresence_index[i]:_UnmarshalPresence_index[i+1]]
}
func UnmarshalPresenceFromString(s string) (UnmarshalPresence, error) {
	for i := 0; i < 4; i++ {
		if e := UnmarshalPresence(i + 0); s == e.String() {
			return e, nil
		}
	}
	return UnmarshalPresence(0), errors.New("cannot deternime UnmarshalPresence from string")
}
