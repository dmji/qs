// Code generated by "go-stringer -type=MarshalPresence --trimprefix=MarshalPresence -output marshal_string.go -nametransform=lower -fromstringgenfn"; DO NOT EDIT.

package qs

import (
	"errors"
	"strconv"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MarshalPresenceMPUnspecified-0]
	_ = x[MarshalPresenceKeepEmpty-1]
	_ = x[MarshalPresenceOmitEmpty-2]
}

const _MarshalPresence_name = "mpunspecifiedkeepemptyomitempty"

var _MarshalPresence_index = [...]uint8{0, 13, 22, 31}

func (i MarshalPresence) String() string {
	if i < 0 || i >= MarshalPresence(len(_MarshalPresence_index)-1) {
		return "MarshalPresence(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MarshalPresence_name[_MarshalPresence_index[i]:_MarshalPresence_index[i+1]]
}
func MarshalPresenceFromString(s string) (MarshalPresence, error) {
	for i := 0; i < 3; i++ {
		if e := MarshalPresence(i + 0); s == e.String() {
			return e, nil
		}
	}
	return MarshalPresence(0), errors.New("cannot deternime MarshalPresence from string")
}
